4. Создать файл “new.json” - 
touch new.json
5. Добавить файл под гит. - 
git add new.json
6. Закоммитить файл. - 
git commit -m "new.json"
7. Отправить файл на внешний GitHub репозиторий. 
- git push
8. Создать файлы new2.json, new2.xml, new2.txt - 
touch new2.json new2.xml new2.txt
9. Добавить файлы под гит. 
- git add .
10. Закоммитить файлы. - 
git commit -m "new2.json new2.txt new2.xml"
11. Отправить файлы на внешний GitHub репозиторий.- 
git push
12. Отредактировать содержание файла “new2.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата).- 
vim new2.txt
name: Makarava Alina Alegauna
age: 37 years old
pets number: 2 pets
salary: 200
Esq :wq

13. Отредактировать содержание файла “new2.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON - 
vim new2.json
{
        "name":"Alina Makarava Alegauna" ,
        "age":26 ,
        "pets":2 ,
        "salary":200
 }
Esq :wq

14. Добавить и закоммитить “new2.txt” одной строчкой. - 
git add new2.txt && git commit -m "comment"
15. Добавить и закоммитить “new2.json” одной строчкой. - 
git add new2.json && git commit -m "comment"  
16. Отправить изменения на внешний репозиторий. - 
git push
17. Отредактировать содержание файла “new2.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. -
vim new2.xml
<? xml version="1.0"?>
<CAT>
        <NAME>Alina Makarava Alegauna</NAME>
        <AGE>37</AGE>
        <PETS>2</PETS>
        <SALARY>200</SALARY>
</CAT>
Esq :wq
18. Добавить и закоммитить “new2.xml” одной строчкой.-
git add new2.xml && git commit -m "comment  
19. Отправить изменения на внешний репозиторий.-
git push
20. Отправить предыдущее домашнее задание по GitBush Terminal на внешний репозиторий.
cp /dir.1/ dom1.txt ./group23/
$ git add dom1.txt && git commit -m "comment"
git push
21. В веб интерфейсе GitHub создать файл new3.txt.
открыть в гитхаб папку group23
кликнуть мышкой на add file
кликнуть мышкой на create new file 
в поле name записать название new3.txt
наать на кнопку commit new file
22. Отредактировать в веб интерфейсе содержание файла “new3.txt” - написать информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить).
кликнуть на файл
выбрать edit this file
любимый фильм: Красотка,

любимый сериал: Шерлок Холмс,

любимая еда: лазанья,

любимое время года: лето,
страна, которую хотела бы посетить: Грузия, Африка.
нажать на кнопку commit changes
23. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
нажать на кнопку commit changes
24. Синхронизировать внешний и локальный репозитории (слить изменения с внешнего репозитория)
git pul
25. Отредактировать в веб интерфейсе содержание файла “new2.json” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате JSON.
кликнуть на файл new2.json
выбрать edit this file
{
	
"name": "Alina Makarava Alegauna" ,
	
"age": 37 ,
	
"pets": 2 ,
	
"salary": 200,
	
"film": "pretty women",
	
"TV series": "Sherlock Holms",
	
"food": "lasagna",
	
"season": "summer",
	
"country": "Africa"
 }
нажать на кнопку commit changes
26. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
нажать на кнопку commit changes
27. Синхронизировать внешний и локальный репозитории
git pull
28. Отредактировать в веб интерфейсе содержание файла “new2.xml” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате XML.
кликнуть на файл new2.xml
выбрать edit this file
<? xml version="1.0"?>

<CAT>
	
<NAME>Alina Makarava Alegauna</NAME>
	
<AGE>37</AGE>
	
<PETS>2</PETS>
	
<SALARY>200</SALARY>
	
<FILM>pretty women</FILM>
	
<TV SERIES>Sherlock Holms</TV SERIES>
	
<FOOD>lasagna</FOOD>
	
<SEASON>summer</SEASON>
	
<COUNTRY>Africa</COUNTRY>

</CAT>
нажать на кнопку commit changes
29. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
нажать на кнопку commit changes
30. Синхронизировать внешний и локальный репозитории
git pull